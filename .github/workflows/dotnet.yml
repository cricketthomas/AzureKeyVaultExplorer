name: .NET Build and Publish

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ dev ]

permissions:
  contents: write

jobs:

  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        #  ubuntu-latest,
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - uses: actions/cache@v3
      with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget
    - name: Publish Windows
      if: matrix.os == 'windows-latest'
      run: | 
        dotnet publish ./kvexplorer.Desktop/kvexplorer.Desktop.csproj --configuration Release --runtime win-x64 --output ${{ github.workspace }}\artifacts\win-x64 -f net8.0-windows10.0.19041.0
        $files = Get-ChildItem -Path "$env:GITHUB_WORKSPACE\artifacts\win-x64"  -Exclude @("*.pdb", "*.dsym","Key Vault Explorer") 
        Compress-Archive -Path $files -DestinationPath "$env:GITHUB_WORKSPACE\artifacts\kvexplorer-win-x64.zip"
      shell: pwsh
      
    - name: Publish MacOS-x64
      if: matrix.os == 'macos-latest'
      run: |
        dotnet publish ./kvexplorer.Desktop/kvexplorer.Desktop.csproj --configuration Release --runtime osx-x64 --output ${{ github.workspace }}\artifacts\osx-x64 -f net8.0
        $initialRootDir = "Key Vault Explorer"
        $contentsDir = "$initialRootDir\Contents"
        $macOSDir = "$($initialRootDir)\Contents\MacOS"
        $resourcesPath = "$($initialRootDir)\Contents\Resources"
        New-Item -ItemType Directory -Path $initialRootDir -Force | Out-Null
        New-Item -ItemType Directory -Path $contentsDir -Force | Out-Null
        New-Item -ItemType Directory -Path $macOSDir -Force | Out-Null
        New-Item -ItemType Directory -Path $resourcesPath -Force | Out-Null
        
        $filesToMove = Get-ChildItem  -Exclude @("*.pdb", "*.dsym","Key Vault Explorer") 
        foreach ($file in $filesToMove) {
            Copy-Item -Path $file -Destination $macOSDir -Force
        }
        
        Copy-Item -Path "$env:GITHUB_WORKSPACE/kvexplorer/Assets/Info.plist" -Destination $contentsDir -Force
        Copy-Item -Path "$env:GITHUB_WORKSPACE/kvexplorer/Assets/AppIcon.icns" -Destination $resourcesPath -Force
        Rename-Item -Path $initialRootDir -NewName "$($initialRootDir).app" -Force 
        Compress-Archive -Path "$($initialRootDir).app" -DestinationPath "$env:GITHUB_WORKSPACE\artifacts\mac-x64.zip"
      shell: pwsh
   
    - name: Publish MacOS
      if: matrix.os == 'macos-latest'
      run: | 
        dotnet publish ./kvexplorer.Desktop/kvexplorer.Desktop.csproj --configuration Release --runtime  osx-arm64 --output ${{ github.workspace }}\artifacts\osx-arm64 -f net8.0
        $initialRootDir = "Key Vault Explorer"
        $contentsDir = "$initialRootDir\Contents"
        $macOSDir = "$($initialRootDir)\Contents\MacOS"
        $resourcesPath = "$($initialRootDir)\Contents\Resources"
        New-Item -ItemType Directory -Path $initialRootDir -Force | Out-Null
        New-Item -ItemType Directory -Path $contentsDir -Force | Out-Null
        New-Item -ItemType Directory -Path $macOSDir -Force | Out-Null
        New-Item -ItemType Directory -Path $resourcesPath -Force | Out-Null
        
        $filesToMove = Get-ChildItem  -Exclude @("*.pdb", "*.dsym","Key Vault Explorer") 
        foreach ($file in $filesToMove) {
            Copy-Item -Path $file -Destination $macOSDir -Force
        }
        
        Copy-Item -Path "$env:GITHUB_WORKSPACE/kvexplorer/Assets/Info.plist" -Destination $contentsDir -Force
        Copy-Item -Path "$env:GITHUB_WORKSPACE/kvexplorer/Assets/AppIcon.icns" -Destination $resourcesPath -Force
        Rename-Item -Path $initialRootDir -NewName "$($initialRootDir).app" -Force 
        Compress-Archive -Path "$($initialRootDir).app" -DestinationPath "$env:GITHUB_WORKSPACE\artifacts\mac-arm64.zip"
      shell: pwsh
       
    - name: Create Release
      run: |
        gh release create v0.0.${{github.run_attempt}} --draft
        gh release upload v0.0.${{github.run_attempt}} "$env:GITHUB_WORKSPACE\artifacts\kvexplorer-win-x64.zip" "$env:GITHUB_WORKSPACE\artifacts\mac-arm64.zip" "$env:GITHUB_WORKSPACE\artifacts\mac-x64.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: pwsh
    
      

        
