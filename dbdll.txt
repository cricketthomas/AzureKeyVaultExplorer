
            <!--<Style Selector=".isActiveTab /template/ Border">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="1,1,1,1" />
                <Setter Property="CornerRadius" Value="5" />
            </Style>
            Avalonia.Controls.Shapes.Path#LeftRadiusRenderArc
			FluentAvalonia.UI.Controls.TabViewItem /template/ Avalonia.Controls.Shapes.Path#RightRadiusRenderArc
            -->


            <!--<Style Selector="ui|TabViewItem /template/ Border">
                <Setter Property="BorderBrush" Value="Blue" />
                <Setter Property="BorderThickness" Value="1,1,1,1" />
                <Setter Property="CornerRadius" Value="5" />
            </Style>-->


            <!--<Style Selector="ui|TabViewItem /template/ Border /template/ Border#BottomBorderLine">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="ui|TabViewItem /template/ Border/template/ Path#LeftRadiusRenderArc">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="ui|TabViewItem /template/ Border /template/ Path#RightRadiusRenderArc">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="ui|TabViewItem /template/ Border /template/ Path#SelectedBackgroundPath">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Fill" Value="{DynamicResource TabViewItemHeaderBackgroundSelected}" />
            </Style>-->
            <!--<Style Selector="ui|TabViewItem /template/ Border /template/ Border#TabContainerBorder:disabled">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="4" />
            </Style>-->
            <!--<Style Selector="ui|TabViewItem /template/ Border">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="1,1,1,1" />
                <Setter Property="CornerRadius" Value="5" />
            </Style>-->


            <!--<Style Selector="ui|TabViewItem /template/ Border.inActiveTab">
                <Setter Property="BorderBrush" Value="Blue" />
                <Setter Property="BorderThickness" Value="1,1,1,1" />
                <Setter Property="CornerRadius" Value="5" />
            </Style>-->

   <Styles>
       <Style Selector="ui|TabView#TabViewDoc.emptyTabViewDragMargin">
           <Setter Property="Margin" Value="0,15,0,0" />
       </Style>
       <!--<Style Selector="ui|TabView#TabViewDoc /template/ ContentPresenter">
           <Setter Property="BorderBrush" Value="Red" />
           <Setter Property="BorderThickness" Value="0,0,0,1" />
           <Setter Property="CornerRadius" Value="0" />
       </Style>-->
       <!--<Style Selector="ui|TabView /template/ ScrollViewer#ScrollViewer /template/ ScrollContentPresenter#ScrollContentPresenter">
           <Setter Property="BorderBrush" Value="Red" />
           <Setter Property="BorderThickness" Value="0,0,0,1" />
           <Setter Property="CornerRadius" Value="0" />
       </Style>-->

       <!--<Style Selector="ui|TabView#TabViewDoc /template/ ContentPresenter">
           <Setter Property="BorderBrush" Value="Red" />
           <Setter Property="BorderThickness" Value="0,0,0,1" />
           <Setter Property="CornerRadius" Value="0" />
       </Style>
       <Style Selector=".inActiveTab /template/ ui|TabViewItem /template/ Border">
           <Setter Property="BorderBrush" Value="Blue" />
           <Setter Property="BorderThickness" Value="1,1,1,1" />
           <Setter Property="CornerRadius" Value="5" />
		FluentAvalonia.UI.Controls.TabViewItem /template/ Avalonia.Controls.Border#LayoutRootBorder
		Avalonia.Controls.Presenters.ScrollContentPresenter#ScrollContentPresenter
		FluentAvalonia.UI.Controls.TabView#TabViewDoc /template/ FluentAvalonia.UI.Controls.Primitives.TabViewListView#TabListView /template/ Avalonia.Controls.ScrollViewer#ScrollViewer /template/ Avalonia.Controls.Presenters.ScrollContentPresenter#ScrollContentPresenter
       </Style>-->

       <Style Selector="ui|TabViewItem">
           <!--<Setter Property="BorderBrush" Value="Blue" />-->
           <!--<Setter Property="BorderThickness" Value="0,0,0,1" />-->
           <Style Selector="^:selected /template/ Border#LayoutRootBorder">
               <!--  FluentAvalonia.UI.Controls.TabViewItem /template/ Avalonia.Controls.Border#TabContainerBorder  -->
               <!--<Setter Property="BorderThickness" Value="1,1,1,1" />-->
               <!--<Setter Property="BorderBrush" Value="Red" />-->
               <!--<Setter Property="CornerRadius" Value="8" />-->

               <!--<Setter Property="ZIndex" Value="1" />-->
           </Style>

           <Style Selector="^:selected /template/ Border">
               <!--<Setter Property="BorderThickness" Value="0,1,1,0" />-->
               <Setter Property="BorderBrush" Value="Blue" />
               <Style Selector="^ /template/ Path#LeftRadiusRenderArc">
                   <Setter Property="Fill" Value="Blue" />
               </Style>
               <Style Selector="^ /template/ Border#TabContainerBorder">
                   <Setter Property="BorderBrush" Value="Blue" />
               </Style>
           </Style>


           <!--<Style Selector="^:disabled">
               <Setter Property="BorderThickness" Value="1" />
               <Setter Property="BorderBrush" Value="Red" />
               <Setter Property="CornerRadius" Value="5" />
           </Style>-->

       </Style>--
-- File generated with SQLiteStudio v3.4.4 on Sat Oct 7 10:21:15 2023
--
-- Text encoding used: System
--
PRAGMA foreign_keys = off;
BEGIN TRANSACTION;

-- Table: BookmarkedItems
CREATE TABLE IF NOT EXISTS BookmarkedItems (
    Id                      INTEGER PRIMARY KEY AUTOINCREMENT
                                    NOT NULL,
    Name                    TEXT    NOT NULL,
    VaultUri                TEXT    NOT NULL,
    Type                    INT     NOT NULL,
    SubscriptionDisplayName TEXT,
    ContentType             TEXT,
    Version                 TEXT    NOT NULL,
    UNIQUE (
        Name,
        Version
    )
);


-- Table: QuickAccess
CREATE TABLE IF NOT EXISTS QuickAccess (
    Id                      INTEGER PRIMARY KEY AUTOINCREMENT
                                    NOT NULL,
    Name                    TEXT    NOT NULL,
    VaultUri                TEXT    NOT NULL,
    KeyVaultId              TEXT    NOT NULL,
    SubscriptionDisplayName TEXT,
    SubscriptionId          TEXT    NOT NULL
);


COMMIT TRANSACTION;
PRAGMA foreign_keys = on;
