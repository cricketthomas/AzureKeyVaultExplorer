<Window
    x:Class="avalon.kvexplorer.Views.MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:armmodels="clr-namespace:Azure.ResourceManager.KeyVault;assembly=Azure.ResourceManager.KeyVault"
    xmlns:custom="clr-namespace:avalon.kvexplorer.Views.CustomControls;assembly=avalon.kvexplorer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:avalon.kvexplorer.Models;assembly=avalon.kvexplorer"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    xmlns:uip="using:FluentAvalonia.UI.Controls.Primitives"
    xmlns:vm="using:avalon.kvexplorer.ViewModels"
    xmlns:wnd="using:FluentAvalonia.UI.Windowing"
    Title="avalon.kvexplorer"
    Width="640"
    Height="420"
    d:DesignHeight="500"
    d:DesignWidth="800"
    x:DataType="vm:MainWindowViewModel"
    ExtendClientAreaChromeHints="Default, PreferSystemChrome, OSXThickTitleBar"
    ExtendClientAreaToDecorationsHint="True"
    Icon="/Assets/avalonia-logo.ico"
    SystemDecorations="Full"
    mc:Ignorable="d">
    <!--
    -->
    <Design.DataContext>
        <!--
            This only sets the DataContext for the previewer in an IDE,
            to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs)
        -->
        <vm:MainWindowViewModel />

    </Design.DataContext>


    <DockPanel>
        <custom:TitleBarControl DataContext="{Binding TitleBarViewModel}" DockPanel.Dock="Top" />



        <StackPanel
            Height="22"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="#512bd4"
            DockPanel.Dock="Bottom"
            Orientation="Horizontal"
            ZIndex="999">

            <TextBlock Foreground="WhiteSmoke">Username</TextBlock>

        </StackPanel>



        <StackPanel
            Grid.Row="1"
            Grid.Column="0"
            Width="200"
            DockPanel.Dock="Left">

            <TextBox
                Margin="1"
                Text="{Binding SearchQuery, Mode=TwoWay}"
                Watermark="Filter Vaults" />



            <TreeView
                Grid.Row="2"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                AutoScrollToSelectedItem="True"
                ItemsSource="{Binding VaultTreeList}"
                SelectedItem="{Binding SelectedTreeItem, Mode=TwoWay}"
                SelectionMode="Single">

                <TreeView.DataTemplates>
                    <TreeDataTemplate DataType="models:KeyVaultModel" ItemsSource="{Binding KeyVaultResources}">
                        <TextBlock Text="{Binding SubscriptionDisplayName}" />
                    </TreeDataTemplate>
                    <DataTemplate DataType="armmodels:KeyVaultResource">
                        <TextBlock Text="{Binding Data.Name, Mode=OneWay}" />
                    </DataTemplate>
                </TreeView.DataTemplates>
            </TreeView>
        </StackPanel>

        <Grid
            Margin="4"
            ColumnDefinitions="*"
            RowDefinitions="Auto,Auto,Auto">



            <TabControl
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                TabStripPlacement="Top">

                <TabControl.Styles>
                    <Style Selector="TabControl">
                        <Setter Property="Background" Value="#F0F0F0" />
                        <Setter Property="Height" Value="120" />
                    </Style>
                    <Style Selector="TabControl WrapPanel">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />

                        <Setter Property="Background" Value="#2B579A" />
                    </Style>

                    <Style Selector="TabItem:selected/template/ ContentPresenter">
                        <Setter Property="Background" Value="Gold" />
                    </Style>
                </TabControl.Styles>

                <TabItem Grid.ColumnSpan="1" Header="Circle">
                    <DataGrid
                        Name="MyDataGrid"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        CanUserReorderColumns="True"
                        ItemsSource="{Binding SecretList}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                            <DataGridTextColumn Binding="{Binding Version}" Header="Version" />
                            <DataGridTextColumn Binding="{Binding VaultUri}" Header="VaultUri" />
                            <DataGridTextColumn Binding="{Binding ContentType}" Header="ContentType" />
                        </DataGrid.Columns>
                        <DataGrid.Styles>
                            <!--<Style Selector="DataGrid DataGridRow:nth-child(2n)">
                                <Setter Property="Background" Value="whitesmoke" />
                            </Style>-->
                        </DataGrid.Styles>
                    </DataGrid>
                </TabItem>

                <TabItem>
                    <TabItem.Header>
                        <TextBlock VerticalAlignment="Top">Square</TextBlock>
                    </TabItem.Header>

                    <Border
                        Padding="15"
                        Background="LightBlue"
                        BorderBrush="Black"
                        BorderThickness="2">
                        <Grid Background="White" ShowGridLines="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                            </Grid.RowDefinitions>
                            <TextBlock
                                Grid.Row="0"
                                Grid.Column="0"
                                HorizontalAlignment="Center"
                                FontSize="18">
                                VerticalAlignment Sample
                            </TextBlock>
                            <Button
                                Grid.Row="1"
                                Grid.Column="0"
                                VerticalAlignment="Top">
                                Button 1 (Top)
                            </Button>
                            <Button
                                Grid.Row="2"
                                Grid.Column="0"
                                VerticalAlignment="Bottom">
                                Button 2 (Bottom)
                            </Button>
                            <Button
                                Grid.Row="3"
                                Grid.Column="0"
                                VerticalAlignment="Center">
                                Button 3 (Center)
                            </Button>
                            <Button
                                Grid.Row="4"
                                Grid.Column="0"
                                VerticalAlignment="Stretch">
                                Button 4 (Stretch)
                            </Button>
                        </Grid>
                    </Border>
                </TabItem>
            </TabControl>

        </Grid>

        <Grid
            Margin="2"
            ColumnDefinitions="Auto, *"
            RowDefinitions="Auto,*">

            <!--<Button
                x:Name="OpenWindowButton"
                Grid.Row="0"
                Click="OpenWindowButton_Click"
                Content="Open Window" />-->
            <!--<Button
                x:Name="xxxx"
                Grid.Row="0"
                Grid.Column="2"
                Command="{Binding LoginCommand}"
                Content="login" />-->
            <!--<Button
                x:Name="ShowNoticiation"
                Grid.Row="1"
                Click="button_Click"
                Content="ShowNoticiation" />-->

            <!--<Button
                x:Name="GetKvButton"
                Grid.Row="0"
                Grid.Column="1"
                Command="{Binding GetAvailableKeyVaultsCommand}"
                Content="GetAvailableKeyVaults" />-->




        </Grid>
    </DockPanel>



</Window>